<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: define"src/main/webapp/WEB-INF/spring/root-context.xml"s shared resources visible to all other web components -->

	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- <property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="jdbcUrl"
			value="jdbc:oracle:thin:@localhost:1521:XE"></property> -->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"></property>
		
		<property name="username" value="book_ex"></property>
		<property name="password" value="book_ex"></property>
	</bean>


	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean> 
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 트랜잭션 처리를 위해 추가해준 bean -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 스프링 예외처리 리졸버 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	    <property name="defaultErrorView" value="exception/error_page" />
	    <property name="defaultStatusCode" value="200" />
	    <property name="exceptionAttribute" value="exception" />
	    <property name="exceptionMappings">
	        <props>
	            <prop key="AccessDeniedException">exception/customNotAllowedRequest</prop>
	            <prop key="NoHandlerFoundException">exception/custom404</prop>
	        </props>
	    </property>
	
	    <property name="statusCodes">
	        <props>
	            <prop key="exception/customNotAllowedRequest">403</prop>
	            <prop key="exception/custom404">404</prop>
	        </props>
	    </property>
	</bean>

	<!-- 트랜잭션 처리를 위해 , 애노테이션 추가  -->
	<tx:annotation-driven />
	
	<mybatis-spring:scan base-package="org.thelovechurch.mapper"/>
	
	<context:component-scan base-package="org.thelovechurch.service"></context:component-scan>
	<context:component-scan base-package="org.thelovechurch.aop"></context:component-scan>
	<context:component-scan base-package="org.thelovechurch.event" />
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- 
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="location">
	        <value>classpath:application.properties</value>
	    </property>
	</bean>
	 -->
</beans>
